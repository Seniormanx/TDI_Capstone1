name: Data Checker

on:
  push:
    paths:
      - 'data-hub/**'
      - 'scripts/**'

  pull_request:
    paths:
      - 'data-hub/**'
      - 'scripts/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Install ShellCheck
      - name: Install ShellCheck
        run: sudo apt-get install shellcheck

      # Step 3: Run ShellCheck on scripts
      - name: Run Linter
        run: shellcheck scripts/*.sh

  monitor_changes:
    runs-on: ubuntu-latest
    needs:  lint
    steps:
      # Step 1: Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Monitor folder changes using dorny/paths-filter
      - name: Monitor Folders for Changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            data:
              - 'data-hub/**'
              - 'db/**'

      # Step 3: Print which folders were changed
      - name: Print Changed Folders
        run: |
          echo "Data folder changed: ${{ steps.changes.outputs.data }}"
    

  data_integration:
    runs-on: ubuntu-latest
    needs: [lint, monitor_changes]
    steps:
      # Step 1: Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Make the Bash script executable
      - name: Make Script Executable
        run: chmod +x scripts/data_integrate.sh

      # Step 3: Run the Bash script
      - name: Run Data Integration Script
        run: ./scripts/data_integrate.sh

      # Step 4: Check the updated dataset
      - name: Check the updated dataset
        run:  wc -l db/database.csv
    

      - name: updating the db/database file
        run: mv db/database.csv  db/dataset.csv 

      # Step 5: Commit changes if modified
      - name: Commit 
        if: env.changed == 'true'
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "waletomi5@gmail.com"
          git config --global user.name "Seniormanx"
          
          timestamp=$(date +'%Y%m%d%H%M%S')
          branch_name="update-dataset-$timestamp"
          git checkout -b "$branch_name"
          
          git add db/dataset.csv
          git commit -m "Updated db/dataset.csv after integration"
          git push origin "$branch_name"

          git checkout main
          git merge --no-ff "$branch_name"
          git push origin main

          git branch -d "$branch_name"
          git push origin --delete "$branch_name"
         