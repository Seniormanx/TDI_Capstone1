name: Data Checker

on:
  # workflow_dispatch: Use this when you are still testing the linter 
  push:
    paths:
      - 'data-hub/**'
      - 'scripts/**'

  pull_request:
    paths:
      - 'data-hub/**'
permissions:
  contents: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Install ShellCheck
      - name: Install ShellCheck
        run: sudo apt-get install shellcheck

      # Step 3: Run ShellCheck on scripts
      - name: Run Linter
        run: shellcheck scripts/*.sh
        
  monitor_changes:
    runs-on: ubuntu-latest
    # needs:  lint
    steps:
      # Step 1: Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Monitor folder changes using dorny/paths-filter
      - name: Monitor Folders for Changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            data:
              - 'data-hub/**'
              - 'db/**'

      # Step 3: Print which folders were changed
      - name: Print Changed Folders
        run: |
          echo "Data folder changed: ${{ steps.changes.outputs.data }}"
    
  data_integration:
    runs-on: ubuntu-latest
    needs: [monitor_changes]
    steps:
      # Step 1: Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Make the Bash script executable
      - name: Make Script Executable
        run: chmod +x scripts/data_integrate.sh

      # Step 3: Run the Bash script
      - name: Run Data Integration Script
        run: ./scripts/data_integrate.sh

      # Step 4: Check the updated dataset
      - name: Check the updated dataset
        run:  wc -l db/database.csv

      # Step 5: Commit changes if modified
      - name: Stage and Commit Report
        run: |
          git config --global user.name "Seniormanx"
          git config --global user.email "waletomi5@gmail.com"
          git add db/database.csv
          git commit -m "Automated Integration Script"

      - name: Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git push
         


